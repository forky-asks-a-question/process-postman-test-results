name: Build and Check for Changes
on:
  # This workflow uses the pull_request trigger which prevents write permissions and secrets
  # access to the target repository from public forks.  This should remain as a pull_request
  # trigger because checkout, build, format and checking for changes do not need elevated
  # permissions to the repository.  The reduced permissions for public forks is adequate.
  # Since this will commit readme/recompile changes back to the branch, special attention 
  # should be paid to changes made to this workflow when reviewing the PR and granting 
  # permission to first time contributors to run the workflow.
  pull_request:
  # Don't include any specific paths here so we always get a build that produces a status
  # check that our Branch Protection Rules can use.  Having a status check also allows us
  # to require that branches be up to date before they are merged.

jobs:
  next-version:
    runs-on: ubuntu-latest
    outputs:
      NEXT_VERSION: ${{ steps.version.outputs.NEXT_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'
          fetch-depth: 0
          
      - name: Get the next version for the readme if there are code changes to the action
        id: version
        uses: im-open/git-version-lite@v2.1.2

  build:
    runs-on: ubuntu-latest
    needs: [next-version]

    permissions:
      pull-requests: write

    env: 
     NEXT_VERSION: ${{ needs.next-version.outputs.NEXT_VERSION }}
     IS_FORK: ${{ github.event.pull_request.head.repo.fork }}
     
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Check for code changes to the action
        id: action-code
        uses: im-open/did-custom-action-code-change@v1.0.1
        with:
          files-with-code: 'action.yml,package.json,package-lock.json'
          folders-with-code: 'src,dist'
          token: ${{ secrets.GITHUB_TOKEN }}

      # If this step results in changes, they will be committed in the last step
      - name: Recompile and Format action if there are code changes to the action
        if: steps.action-code.outputs.HAS_CHANGES == 'true'
        run: npm run build
   
      - name: Check for unstaged readme/recompile changes if there are code changes to the action
        if: steps.action-code.outputs.HAS_CHANGES == 'true'
        run: |
          if [[ "$(git status --porcelain)" != "" ]]; then
            echo "There are changes to commit"
            echo "NEEDS_COMMIT=true" >> "$GITHUB_ENV"
          else
            echo "There were no changes to commit"
            echo "NEEDS_COMMIT=false" >> "$GITHUB_ENV"
          fi
          
      - name: Construct Failing Workflow Summary
        if: env.NEEDS_COMMIT == 'true' && env.IS_FORK == 'true'
        id: summary
        uses: actions/github-script@v6
        with:
          script: |
            const summary = `This PR needs a few updates before it can proceed.  Please make the following changes:
            - Recompile the action by running \`npm run build\` from the root of the repository
            - Update the version for all instances of this action in the ${{ inputs.readme-location }}.  It should be changed to: \`uses: im-open/${{ inputs.action-name }}@${{ env.NEXT_VERSION }}\``;
            console.log('Workflow Summary:');
            console.log(summary);
            core.setOutput('summary', summary);
      - name: Fail the build with instructions on how to fix it if PR is from a forked repo
        # If this PR is from a forked repo, GH will only grant us read access, not write so we cannot comment on the PR.
        # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
        # Instead, fail the build and provide instructions on how to fix it.
        if: env.NEEDS_COMMIT == 'true' && env.IS_FORK == 'true'
        run: |
          echo "::error::${{ steps.summary.outputs.summary }}"
          echo '${{ steps.summary.outputs.summary }}' >> $GITHUB_STEP_SUMMARY
          exit 1
      
